{"version":3,"file":"static/js/937.9c9554fd.chunk.js","mappings":"8KAEA,MAqBA,EArBcA,IAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAWC,MAAO,CAAEC,MAAO,SAAaC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKC,IAAKP,EAAMQ,MAAON,UAAU,eAAeO,IAAI,WACpDR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWG,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,aAAYG,SAAEL,EAAMU,QACjCV,EAAMW,aACHV,EAAAA,EAAAA,MAAA,KAAGC,UAAU,uBAAsBG,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,eAAcG,SAAC,yBAE/BL,EAAMW,gBAGXL,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,U,cCKpB,QAlBA,SAAiCZ,GAC7B,MAAOa,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAEjC,OACIT,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CACFH,KAAMA,EACNI,QAAO,GAAAC,OAAKlB,EAAMmB,MAClBC,QAASA,IAAMN,GAAQ,GACvBO,aAAW,EACXnB,UAAU,eAAcG,UAExBC,EAAAA,EAAAA,KAACU,EAAAA,EAAMM,QAAO,CAACpB,UAAU,eAAcG,SAClCL,EAAMuB,WAIvB,E,cCZA,MAyEA,EAzEsBC,KAClB,MAAMC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAKzB,MAAEC,EAAK,SAAEC,GAAaJ,EAGtBK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACDC,aAAaC,QAAQ,SAI1BC,IAHIL,EAAS,SAGH,GACX,IAEH,IAAIK,EAAWC,UACX,IACI,MAAMC,QAAiBC,MAAM,GAADpB,OAlBxB,6BAkB+B,qBAAqB,CACpDqB,OAAQ,MACRC,QAAS,CACL,aAAcP,aAAaC,QAAQ,YAK3C,IAAKG,EAASI,GACV,OAIJ,MAAMC,QAAaL,EAASM,OAE5Bd,EAASa,EACb,CAAE,MAAOE,GACLC,QAAQD,MAAM,wBAAyBA,EAC3C,GAGJ,OACI3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BG,SAAA,EACvCJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,6CAA4CG,SAAA,CAAC,gBACzC,IACb4B,aAAaC,QAAQ,YAChBD,aAAaC,QAAQ,YACrB,WAAY,IAAI,SAGzBY,MAAMC,QAAQnB,IACXtB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,2CAA0CG,SACpDuB,EAAMoB,KAAKC,IACR3C,EAAAA,EAAAA,KAAC4C,EAAI,CAEDC,UAAWF,EAAKE,UAChBxC,YAAasC,EAAKtC,YAClBD,MAAOuC,EAAKvC,MACZF,MAAOyC,EAAKE,WAJPF,EAAKG,UAStB9C,EAAAA,EAAAA,KAAC+C,EAAuB,CACpBlC,KAAK,SACLI,QAAQ,qCAGd,C","sources":["components/Note.jsx","components/Alert.jsx","components/UploadHistory.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Note = (props) => {\r\n    return (\r\n        <div className=\"card col\" style={{ width: 18 + \"rem\" }}>\r\n            <img src={props.image} className=\"card-img-top\" alt=\"Plant\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.title}</h5>\r\n                {props.description ? (\r\n                    <p className=\"card-text text-start\">\r\n                        <span>\r\n                            <b className=\"text-warning\">Expert's Opinion :</b>\r\n                        </span>\r\n                        {props.description}\r\n                    </p>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction AlertDismissibleExample(props) {\r\n    const [show, setShow] = useState(true);\r\n\r\n    return (\r\n        <Alert\r\n            show={show}\r\n            variant={`${props.type}`}\r\n            onClose={() => setShow(false)}\r\n            dismissible\r\n            className=\"mx-auto w-50\"\r\n        >\r\n            <Alert.Heading className=\"text-center \">\r\n                {props.message}\r\n            </Alert.Heading>\r\n        </Alert>\r\n    );\r\n}\r\n\r\nexport default AlertDismissibleExample;\r\n","import \"../App.css\";\r\nimport \"../css/backgroundImage.css\";\r\nimport NoteContext from \"../context/notes/NoteContext\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport Note from \"./Note\";\r\nimport AlertDismissibleExample from \"./Alert\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst UploadHistory = () => {\r\n    const noteContext = useContext(NoteContext);\r\n\r\n    const url = \"http://localhost:5000/api/\";\r\n\r\n    // Destructuring\r\n    const { notes, setNotes } = noteContext;\r\n\r\n    // if not logged in then navigate to the login page\r\n    const navigate = useNavigate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) {\r\n            navigate(\"/login\");\r\n            return;\r\n        }\r\n        getNotes();\r\n    }, []);\r\n\r\n    let getNotes = async () => {\r\n        try {\r\n            const response = await fetch(`${url}notes/getallnotes`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"auth-token\": localStorage.getItem(\"token\"),\r\n                },\r\n            });\r\n\r\n            // Check if the response is ok\r\n            if (!response.ok) {\r\n                return;\r\n            }\r\n\r\n            // Parse the JSON data from the response\r\n            const data = await response.json();\r\n\r\n            setNotes(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching notes:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\" pt-3 pb-3 backgroundImage\">\r\n            <h3 className=\" h1 text-center py-3 bg-opacity-75 bg-dark\">\r\n                Welcome back,{\" \"}\r\n                {localStorage.getItem(\"username\")\r\n                    ? localStorage.getItem(\"username\")\r\n                    : \"username\"}{\" \"}\r\n                !!!\r\n            </h3>\r\n            {Array.isArray(notes) ? (\r\n                <div className=\"container note-container text-xxl-center\">\r\n                    {notes.map((note) => (\r\n                        <Note\r\n                            key={note._id}\r\n                            baseImage={note.baseImage}\r\n                            description={note.description}\r\n                            title={note.title}\r\n                            image={note.baseImage}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <AlertDismissibleExample\r\n                    type=\"danger\"\r\n                    message=\"Error Loading Previous Results\"\r\n                ></AlertDismissibleExample>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadHistory;\r\n"],"names":["props","_jsxs","className","style","width","children","_jsx","src","image","alt","title","description","_Fragment","show","setShow","useState","Alert","variant","concat","type","onClose","dismissible","Heading","message","UploadHistory","noteContext","useContext","NoteContext","notes","setNotes","navigate","useNavigate","useEffect","localStorage","getItem","getNotes","async","response","fetch","method","headers","ok","data","json","error","console","Array","isArray","map","note","Note","baseImage","_id","AlertDismissibleExample"],"sourceRoot":""}