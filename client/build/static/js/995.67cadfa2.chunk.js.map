{"version":3,"file":"static/js/995.67cadfa2.chunk.js","mappings":"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","sources":["components/Signup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Modal, message, Spin } from \"antd\";\r\nconst Signup = () => {\r\n    const apiUrl = \"http://localhost:5000/api/\";\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [signupLoading, setSignupLoading] = useState(false);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setSignupLoading(true);\r\n\r\n        // Client side verification\r\n        const validationErrors = validateForm(formData);\r\n        if (Object.keys(validationErrors).length !== 0) {\r\n            setErrors(validationErrors);\r\n            setSignupLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${apiUrl}auth/createuser`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name: formData.username,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                }),\r\n            });\r\n\r\n            // If email-id is already in use\r\n            if (response.status === 409) {\r\n                Modal.error({\r\n                    title: \"Error\",\r\n                    content: \"Use different email-id please\",\r\n                });\r\n                setSignupLoading(false);\r\n                return;\r\n            }\r\n\r\n            // If the form data is in invalid format (checked by server)\r\n            if (!response.ok) {\r\n                Modal.error({\r\n                    title: \"Error\",\r\n                    content: \"Invalid Form Data\",\r\n                });\r\n                setSignupLoading(false);\r\n                return;\r\n            }\r\n\r\n            // User account creation Successful\r\n            const data = await response.json();\r\n\r\n            localStorage.setItem(\"token\", data.authToken);\r\n            localStorage.setItem(\"username\", data.username);\r\n            navigate(\"/\");\r\n            message.success({\r\n                title: \"Success\",\r\n                content: \"User created successfully\",\r\n            });\r\n            setSignupLoading(false);\r\n        } catch (error) {\r\n            Modal.error({\r\n                title: \"Error\",\r\n                content:\r\n                    \"Error connecting to backend please check internet connection OR try after sometime\",\r\n            });\r\n            setSignupLoading(false);\r\n            console.error(\"Error during login request:\", error);\r\n        }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n        let errors = {};\r\n\r\n        if (!data.username.trim()) {\r\n            errors.username = \"Username is required\";\r\n        } else if (data.username.length < 5) {\r\n            errors.username = \"Username should be at least 5 characters\";\r\n        }\r\n\r\n        if (!data.email.trim()) {\r\n            errors.email = \"Email is required\";\r\n        } else if (!isValidEmail(data.email)) {\r\n            errors.email = \"Invalid email address\";\r\n        }\r\n\r\n        if (!data.password.trim()) {\r\n            errors.password = \"Password is required\";\r\n        } else if (data.password.length < 8) {\r\n            errors.password = \"Password must be at least 8 characters\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.id]: e.target.value,\r\n        });\r\n\r\n        setErrors({\r\n            ...errors,\r\n            [e.target.id]: \"\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleFormSubmit}>\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 text-center \">\r\n                        <div className=\" my-5 h1 fw-bold \">\r\n                            SmartAgroScan <br />\r\n                            <span className=\"w-100 text-primary h2\">\r\n                                Revolutionizing Plant Health with AI Powered\r\n                                Diagnosis\r\n                            </span>\r\n                        </div>\r\n\r\n                        <p\r\n                            className=\"px-3 \"\r\n                            style={{ color: \"hsl(217, 10%, 50.8%)\" }}\r\n                        >\r\n                            SmartAgroScan combines AI and Machine Learning to\r\n                            revolutionize plant disease identification. Our\r\n                            platform provides quick, accurate, and easy-to-use\r\n                            diagnostics, empowering growers and gardeners to\r\n                            protect their crops effectively. With SmartAgroScan,\r\n                            ensure the health and productivity of your plants\r\n                            through advanced technology.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card my-5\">\r\n                            <div className=\"card-body p-5\">\r\n                                <div className=\"mb-4\">\r\n                                    <label\r\n                                        htmlFor=\"username\"\r\n                                        className=\"form-label\"\r\n                                    >\r\n                                        User name\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={`form-control ${\r\n                                            errors.username ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                        id=\"username\"\r\n                                        value={formData.username}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.username}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mb-4\">\r\n                                    <label\r\n                                        htmlFor=\"email\"\r\n                                        className=\"form-label\"\r\n                                    >\r\n                                        Email\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className={`form-control ${\r\n                                            errors.email ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                        id=\"email\"\r\n                                        value={formData.email}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.email && (\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.email}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"mb-4\">\r\n                                    <label\r\n                                        htmlFor=\"password\"\r\n                                        className=\"form-label\"\r\n                                    >\r\n                                        Password\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={`form-control ${\r\n                                            errors.password ? \"is-invalid\" : \"\"\r\n                                        }`}\r\n                                        id=\"password\"\r\n                                        value={formData.password}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.password}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Spin spinning={signupLoading}>\r\n                                    {\" \"}\r\n                                    <button\r\n                                        className=\"w-100 btn btn-primary\"\r\n                                        type=\"submit\"\r\n                                        disabled={signupLoading}\r\n                                    >\r\n                                        Sign up\r\n                                    </button>\r\n                                </Spin>\r\n                                <hr />\r\n                                <b>\r\n                                    Already Have An Account?{\" \"}\r\n                                    <Link to=\"/login\" className=\" link-info\">\r\n                                        Login\r\n                                    </Link>\r\n                                </b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["Signup","navigate","useNavigate","formData","setFormData","useState","username","email","password","errors","setErrors","signupLoading","setSignupLoading","validateForm","data","trim","length","isValidEmail","test","handleChange","e","target","id","value","_jsx","onSubmit","async","event","preventDefault","validationErrors","Object","keys","response","fetch","concat","method","headers","body","JSON","stringify","name","status","Modal","error","title","content","ok","json","localStorage","setItem","authToken","message","success","console","children","className","_jsxs","style","color","htmlFor","type","onChange","Spin","spinning","disabled","Link","to"],"sourceRoot":""}